[tool.poetry]
name = "async_dramatiq"
version = "0.1.2"
description = "Dramatiq with Asyncio support and some other goodies"
authors = ["Ryan Houlihan <ryan@rhoulihan.com>"]
license = "MIT License"
readme = "README.md"
packages = [{ include = "async_dramatiq", from = "src" }]
include = [{ path = "tests", format = "sdist" }]
homepage = "https://github.com/motherofcoconuts/async-dramatiq"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/motherofcoconuts/async-dramatiq/issues"

[tool.poetry.dependencies]
python = "^3.8.1"
dramatiq = { extras = ["redis", "rabbitmq", "watch"], version = "*"}
apscheduler = "*"

[tool.poetry.dev-dependencies]
mypy = "^1.3.0"
flake8 = "^6.0.0"
black = "^23.3.0"
coverage = "^7.2.5"
pytest-asyncio = "*"
pytest = "*"
pytest-cov = "*"

[build-system]
requires = ["setuptools", "poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
junit_family = "xunit2"
asyncio_mode = "auto"
addopts = "--cov --cov-report term --cov-report xml"
testpaths = [
  "tests"
]
filterwarnings = ["ignore::DeprecationWarning", "ignore::UserWarning:stytch.*"]

[tool.coverage.run]
source = ["async_dramatiq"]
omit = ["*migratons*", "*tests*", "*scripts*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
  ]

[tool.coverage.xml]
output = "coverage.xml"

[tool.isort]
profile = "black"
line_length = 88
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_firstparty=["code_corrector"]
import_heading_stdlib="Standard Library Imports"
import_heading_fastapi_sql_gl="Third Party Imports"
import_heading_firstparty="Local Application Imports"
indented_import_headings=false

# https://pycqa.github.io/isort/docs/configuration/profiles.html
no_lines_before = ["future"]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[tool.black]
line-length = 88
skip-string-normalization = true
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
  /(
      \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.toml
    | \data
    | _build
    | buck-out
    | build
    | dist
    | tests/data
    | \__snapshots__
    # The following are specific to Black, you probably don't want those.
    | blib2to3
  )/
'''

[tool.vulture]
exclude = ["scripts/"]
ignore_decorators = ["@app.route", "@require_*"]
make_whitelist = true
min_confidence = 80
paths = ["async_dramatiq"]
sort_by_size = true
verbose = false

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
scripts_are_modules = true
implicit_reexport = true

check_untyped_defs = true
warn_unused_ignores = true 
warn_return_any = true

disallow_untyped_decorators = false
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_subclassing_any = false

# this is maximum hardcore
strict = true

exclude = "versions/"

[[tool.mypy.overrides]]
module="mypy-tests.*.*.*"
ignore_errors = true

[[tool.mypy.overrides]]
module="mypy-scripts.*"
ignore_errors = true

[[tool.mypy.overrides]]
module="mypy-migrations.*.*"
ignore_errors = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
ignore_missing_imports = true